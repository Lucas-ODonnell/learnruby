def abbreviate_sentence(sent)
sentence = sent.split(" ") #converting string to array so each word can be analyzed separate 
new_sentence = []   #I have an array now this is where I will put the new sentence in array form
  #sentence.each do is like a while loop. Inside theres an if statement. If more than 4 letters use no_vowels
  sentence.each do |word| 
    if word.length > 4
      no_vowels = no_vowel(word) #no_vowel will need to be created in another function called no_vowel
      new_sentence << no_vowels
    else
      new_sentence << word #if less than 4 shovel word
    end
  end
  return new_sentence.join(" ") #the end result needs to be a string

end

def no_vowel(word)
vowels = "a,i,u,e,o"
new_word = "" #this is where the new words are going to go while it loops
  
  word.each_char do |char| #this is like a while loop again
    #we will analyze each individual character of the string. If the char is not a vowel we will add it.
    if !vowels.include?(char)
      new_word += char
    end
  end
  return new_word #If I comment this out the end result won't remove vowels. I don't understand why
end

puts abbreviate_sentence("follow the yellow brick road") # => "fllw the yllw brck road"
puts abbreviate_sentence("what a wonderful life")        # => "what a wndrfl life"
